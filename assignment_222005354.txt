Question1
#!/bin/bash

# Check if the number of arguments is correct
if [ "$#" -ne 3 ]; then
    echo "Error: Incorrect number of arguments. Please provide three numbers." > error.txt
    exit 1
fi

# Sort the numbers in ascending order
Echo –e “$1\n$2\n$3”| sort -n > numbers.txt
question2
#!/bin/bash

# Check if the number of arguments is correct
if [ "$#" -ne 1 ]; then
    echo "Error: Incorrect number of arguments. Please provide a directory name." > error.txt
    exit 1
fi

# Count the number of files and subfolders
FILECOUNT=$(find "$1" -type f | wc -l)
DIRCOUNT=$(find "$1" -type d | wc -l)

# Write the counts to a file
echo "Number of files: $FILECOUNT" > accounts.txt
echo "Number of subfolders: $DIRCOUNT" >> accounts.txt
question3
#!/bin/bash

# Check if the number of arguments is correct
if [ "$#" -ne 1 ]; then
    echo "Error: Incorrect number of arguments. Please provide an arithmetic expression." > error.txt
    exit 1
fi

# Evaluate the arithmetic expression
RESULT=$(($1))

# Print the result
echo "$1 = $RESULT"
Question4
#!/bin/bash

# Check if the number of arguments is correct
if [ "$#" -ne 1 ]; then
    echo "Error: Incorrect number of arguments. Please provide a positive integer." > error.txt
    exit 1
fi

# Check if the argument is a positive integer
If [ "$1"  -le  0 ]; then
    echo "Error: Argument is not a positive integer." > error.txt
    exit 1
fi

# Calculate the factorial
factorial=1
for (( i=1; i<=$1; i++ )); do
    factorial=$((factorial * i))
done

# Print the result
echo "$1! = $factorial"
Question5
#!/bin/bash

# Check if the number of arguments is correct
if [ "$#" -ne 2 ]; then
    echo "Error: Incorrect number of arguments. Please provide two folder names." > error.txt
    exit 1
fi

# Check if the arguments are folders
if [ ! -d "$1" ] || [ ! -d "$2" ]; then
    echo "Error: One or both arguments are not folders." > error.txt
    exit 1
fi

# Delete files from directory 1 that are also in directory 2
cd "$1"
for file in *; do
    if [ -f "$2/$file" ]; then
        rm "$file"
    fi
done
